@model PipelineFeatureList.Models.UsersData

@{PipelineFeatureList.Models.PipelineFeatureListDBContext db = new PipelineFeatureList.Models.PipelineFeatureListDBContext();}

@{
    ViewBag.Title = "Create User";
}

<h2>Create User</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>User</legend>

        <table><tr><td>
        <div class="editor-label">
            @Html.LabelFor(model => model.UserData.UserName)
        </div></td>
        <td>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserData.UserName)
            @Html.ValidationMessageFor(model => model.UserData.UserName)
        </div>
        </td></tr><tr><td>
        <div class="editor-label">
            @Html.LabelFor(model => model.UserData.FirstName)
        </div></td>
        <td>
        <div class="medium">
            @Html.EditorFor(model => model.UserData.FirstName)
            @Html.ValidationMessageFor(model => model.UserData.FirstName)
        </div>
        </td></tr><tr><td>
        <div class="editor-label">
            @Html.LabelFor(model => model.UserData.LastName)
        </div></td>
        <td>
        <div class="medium">
            @Html.EditorFor(model => model.UserData.LastName)
            @Html.ValidationMessageFor(model => model.UserData.LastName)
        </div>
        </td></tr><tr><td>
        <div class="editor-label">
            @Html.LabelFor(model => model.UserData.Email)
        </div></td>
        <td>
        <div class="medium">
            @Html.EditorFor(model => model.UserData.Email)
            @Html.ValidationMessageFor(model => model.UserData.Email)
        </div>
        </td></tr><tr><td>
        <div class="editor-label">
            @Html.LabelFor(model => model.UserData.Password)
        </div></td>
        <td>
        <div class="medium">
            @Html.EditorFor(model => model.UserData.Password)
            @Html.ValidationMessageFor(model => model.UserData.Password)
        </div>
        </td>
        </tr>
        <tr><td>
        <div class="editor-label">
            @Html.LabelFor(model => model.UserData.Active)
        </div></td>
        <td>
        <div class="medium">
            @Html.CheckBoxFor(model => model.UserData.Active) Active?
        </div>
        </td>
        </tr>
        <tr valign="top"><td>
        <div class="editor-label">
            @Html.LabelFor(model => model.UserTypes)
        </div></td>
        <td>
        <div>
            @for (int i = 0; i < Model.UserTypesCheckBoxes.Count; i++)
            {
                @Html.EditorFor(x => Model.UserTypesCheckBoxes[i].Selected)
                @Html.DisplayFor(x => Model.UserTypesCheckBoxes[i].Text)
                @Html.HiddenFor(m => Model.UserTypesCheckBoxes[i].Value)
                <br />
            }
        </div>
        </td></tr></table>
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "linkbutton" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
