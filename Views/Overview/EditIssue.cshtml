@model PipelineFeatureList.Models.FeatureIssue

@{
    ViewBag.Title = "Edit Feature Issue";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        @Html.HiddenFor(model => model.FeatureIssueID)
        @Html.HiddenFor(model => model.BuilderCreatedOn)
        @Html.HiddenFor(model => model.BuilderID)
        @Html.HiddenFor(model => model.CheckerCreatedOn)
        @Html.HiddenFor(model => model.CheckerID)
        @Html.HiddenFor(model => model.EngineerCreatedOn)
        @Html.HiddenFor(model => model.EngineerID)
        @Html.HiddenFor(model => model.ValveSectionID)
        
        <legend>FeatureIssue</legend>
        <table>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.FeatureNumber)
                    </div>
                </td>
                <td>
                    <div class="wide">
                        @Html.EditorFor(model => model.FeatureNumber)
                        @Html.ValidationMessageFor(model => model.FeatureNumber)
                    </div>
                </td>
            </tr>
            @*@if (ViewBag.DisplayGroupName == "Unassigned" || ViewBag.DisplayGroupName == "Build")
        {*@
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.BuilderDescription)
                    </div>
                </td>
                <td>
                    <div class="wide">
                        @Html.EditorFor(model => model.BuilderDescription)
                    </div>
                </td>
            </tr>
            @*}
        else
        {
            <tr><td>
            <div class="editor-label">
                @Html.LabelFor(model => model.BuilderDescription)
            </div></td>
            <td>
            <div class="wide">
                @Html.HiddenFor(model => model.BuilderDescription)
                @Html.DisplayFor(model => model.BuilderDescription)
            </div>
            </td></tr>
        }*@

            @*@if (ViewBag.DisplayGroupName == "Quality Control")
        {*@
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.CheckerDescription)
                    </div>
                </td>
                <td>
                    <div class="wide">
                        @Html.EditorFor(model => model.CheckerDescription)
                    </div>
                </td>
            </tr>
            @*}
        else
        {
            <tr><td>
            <div class="editor-label">
                @Html.LabelFor(model => model.CheckerDescription)
            </div></td>
            <td>
            <div class="wide">
                @Html.HiddenFor(model => model.CheckerDescription)
                @Html.DisplayFor(model => model.CheckerDescription)
            </div>
            </td></tr>
        }*@
            @*@if (ViewBag.DisplayGroupName == "Engineering")
        {*@
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.EngineerDescription)
                    </div>
                </td>
                <td>
                    <div class="wide">
                        @Html.EditorFor(model => model.EngineerDescription)
                    </div>
                </td>
            </tr>
            @*}
        else
        {
            <tr><td>
            <div class="editor-label">
                @Html.LabelFor(model => model.EngineerDescription)
            </div></td>
            <td>
            <div class="wide">
                @Html.HiddenFor(model => model.EngineerDescription)
                @Html.DisplayFor(model => model.EngineerDescription)
            </div>
            </td></tr>
        }*@
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.NatGridCorrespondence)
                    </div>
                </td>
                <td>
                    <div class="wide">
                        @Html.EditorFor(model => model.NatGridCorrespondence)
                    </div>
                </td>
            </tr>
        </table>
        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { ValveSectionID = Session["CurrentValveSection"].ToString() }, htmlAttributes: new { @class = "linkbutton" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*onchangeevent*@
    @*<script type="text/javascript">
        function onchangeevent(e) {
            var featureSelected = document.getElementById('ddlValveSectionFeature');
            var featureSelectedText = featureSelected.options[featureSelected.selectedIndex].innerHTML;
            document.getElementById("hdnFeatureNumber").value = featureSelectedText;
        }
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            $.ajax({
                cache: false,
                type: "GET",
                url: '/Overview/LoadFeatureNumbers/',
                data: {},
                dataType: 'json',
                success: function (data) {
                    var items = "";
                    var selected = document.getElementById('ddlSelectedFeature').innerText;
                    items += ("<option value='0'>- Select a Feature Number -</option>");
                    $.each(data, function (i, data) {
                        if (selected.toString() == data.Value)
                            items += "<option value='" + data.Value + "' selected>" + data.Text + "</option>";
                        else
                            items += "<option value='" + data.Value + "'>" + data.Text + "</option>";
                    });
                    $("#ddlValveSectionFeature").html(items);
                    $("#ddlValveSectionFeature").removeAttr('disabled');
                    $("#ddlValveSectionFeature option[value='" + selected.toString() + "']").attr("selected", "selected");
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    //alert('Failed to retrieve records.');
                }
            });
        });
    </script>*@
}