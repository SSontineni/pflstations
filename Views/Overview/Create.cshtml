@model PipelineFeatureList.Models.ValveSectionFeature

@{
    ViewBag.Title = "Create Circuit Feature";
}

<h2>Create Circuit Feature</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        @Html.HiddenFor(model => model.ODRecordMatrixCheck, new { id = "hdnODRecordMatrixCheck" })
        @Html.HiddenFor(model => model.WTRecordMatrixCheck, new { id = "hdnWTRecordMatrixCheck" })
        @Html.HiddenFor(model => model.SeamRecordMatrixCheck, new { id = "hdnSeamRecordMatrixCheck" })
        @Html.HiddenFor(model => model.SpecRatingRecordMatrixCheck, new { id = "hdnSpecRatingRecordMatrixCheck" })
        <legend>CircuitFeature</legend>
        <table>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.Label("Series")
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.Raw(Session["CurrentOrionStationSeries"].ToString())
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    Current Station
                </td>
                <td>
                    @Html.Raw(ViewBag.CurrentStation)
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.FeatureMarkNumber)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.FeatureMarkNumber)
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.Length)
                </td>
                <td>
                    @Html.EditorFor(model => model.Length)
                </td>
            </tr>

            <tr>
                <td>
                    <table>
                        <tr>
                            <td>
                                <div class="editor-label">@Html.LabelFor(model => model.FeatureID)</div>
                            </td>
                            <td>/</td>
                            <td><div class="editor-label">@Html.LabelFor(model => model.TypeID)</div></td>
                            <td></td>
                        </tr>
                    </table>
                </td>
                <td>
                    <table>
                        <tr>
                            <td>
                                <div class="editor-field">
                                    @Html.DropDownList("FeatureID", ViewBag.FeatureID as SelectList, "- Select a Feature -", new { id = "ddlFeatures", onchange = "pipetypesfromfeatures();" })
                                </div>
                            </td>
                            <td> / </td>
                            <td>
                                <div class="editor-field" id="divPipeTypes">
                                    @Html.DropDownList("TypeID", ViewBag.TypeID as SelectList, "- Select a Feature Type -", new { id = "ddlPipeTypes", onchange = "updateNAdropdowns()" })
                                </div>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.JobWOPO)
                    </div>
                </td>
                <td>
                    <table>
                        <tr>
                            <td>
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.JobWOPO)
                                </div>
                            </td>
                            <td>
                                <div class="editor-field">
                                    @Html.CheckBoxFor(model => model.JobWOPOUnknown) Unknown
                                </div>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="editor-label">
                        @Html.Label("Install / Inservice Date")
                    </div>
                </td>
                <td>
                    <table>
                        <tr>
                            <td>
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.InstallDate)
                                    @Html.ValidationMessageFor(model => model.InstallDate)
                                </div>
                            </td>
                            <td>
                                <div class="editor-field">
                                    @Html.CheckBoxFor(model => model.InstallDateUnknown) Unknown
                                </div>
                            </td>
                            <td> / </td>
                            <td>
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.InServiceDate)
                                    @Html.ValidationMessageFor(model => model.InServiceDate)
                                </div>
                            </td>
                            <td>
                                <div class="editor-field">
                                    @Html.CheckBoxFor(model => model.InServiceDateUnknown) Unknown
                                </div>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.ConstructionTypeID)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.DropDownList("ConstructionTypeID", "- Select a Construction Type -")
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="editor-label">
                        @Html.Label("Feature Notes/Comments")
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.TextAreaFor(model => model.Notes, 6, 200, null)
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.DrawingID)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.DropDownList("DrawingID", "- Select a Drawing Identifier -")
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="editor-label">
                        @Html.Label("OD 1 / Rec ID 1 / Rec ID 2")
                    </div>
                </td>
                <td>
                    <table>
                        <tr>
                            <td>
                                <div class="editor-field">
                                    @Html.DropDownList("ODID1", ViewBag.ODID1 as SelectList, "- Select an OD -", new { id = "ddlODID1" })
                                </div>
                            </td>
                            <td> / </td>
                            <td>
                                <div class="editor-field">
                                    @Html.DropDownList("ODRecordID1", ViewBag.ODRecordID1 as SelectList, "- Select a Record Identifier -", new { id = "ddlODRecordID1", onchange = "onchangeeventOD();" })
                                </div>
                            </td>
                            <td> / </td>
                            <td>
                                <div class="editor-field">
                                    @Html.DropDownList("ODRecordID2", ViewBag.ODRecordID2 as SelectList, "- Select a Record Identifier -", new { id = "ddlODRecordID2", onchange = "onchangeeventOD();" })
                                </div>
                            </td>
                            <td>
                                <label id="ODRecordMatrixCheck" class="message-error"></label>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="editor-label">
                        @Html.Label("WT 1 / Rec ID 1 / Rec ID 2")
                    </div>
                </td>
                <td>
                    <table>
                        <tr>
                            <td>
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.WallThickness1)
                                    @Html.ValidationMessageFor(model => model.WallThickness1)
                                </div>
                            </td>
                            <td> / </td>
                            <td>
                                <div class="editor-field">
                                    @Html.DropDownList("WTRecordID1", ViewBag.WTRecordID1 as SelectList, "- Select a Record Identifier -", new { id = "ddlWTRecordID1", onchange = "onchangeeventWT();" })
                                </div>
                            </td>
                            <td> / </td>
                            <td>
                                <div class="editor-field">
                                    @Html.DropDownList("WTRecordID2", ViewBag.WTRecordID2 as SelectList, "- Select a Record Identifier -", new { id = "ddlWTRecordID2", onchange = "onchangeeventWT();" })
                                </div>
                            </td>
                            <td>
                                <label id="WTRecordMatrixCheck" class="message-error"></label>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.ODID2)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.DropDownList("ODID2", ViewBag.ODID2 as SelectList, "- Select an OD -", new { id = "ddlODID2" })
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.WallThickness2)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.WallThickness2)
                        @Html.ValidationMessageFor(model => model.WallThickness2)
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="editor-label">
                        @Html.Label("Seam Weld Type / Rec ID 1 / Rec ID 2")
                    </div>
                </td>
                <td>
                    <table>
                        <tr>
                            <td>
                                <div class="editor-field">
                                    @Html.DropDownList("SeamWeldTypeID", ViewBag.SeamWeldTypeID as SelectList, "- Select a Seam Weld Type -", new { id = "ddlSeamWeldTypeID" })
                                </div>
                            </td>
                            <td> / </td>
                            <td>
                                <div class="editor-field">
                                    @Html.DropDownList("SeamRecordID1", ViewBag.SeamRecordID1 as SelectList, "- Select a Record Identifier -", new { id = "ddlSeamRecordID1", onchange = "onchangeeventST();" })
                                </div>
                            </td>
                            <td> / </td>
                            <td>
                                <div class="editor-field">
                                    @Html.DropDownList("SeamRecordID2", ViewBag.SeamRecordID2 as SelectList, "- Select a Record Identifier -", new { id = "ddlSeamRecordID2", onchange = "onchangeeventST();" })
                                </div>
                            </td>
                            <td>
                                <label id="SeamRecordMatrixCheck" class="message-error"></label>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>

            <tr>
                <td>
                    <table>
                        <tr>
                            <td><div class="editor-label">@Html.LabelFor(model => model.SpecRatingID)</div></td>
                            <td>/</td>
                            <td>
                                <div class="editor-label">@Html.LabelFor(model => model.GradeID)</div>
                            </td>
                        </tr>
                    </table>
                </td>
                <td>
                    <table>
                        <tr>
                            <td>
                                <div class="editor-field">
                                    @Html.DropDownList("SpecRatingID", ViewBag.SpecRatingID as SelectList, "- Select a Spec Rating -", new { id = "ddlSpecRatingID" })
                                </div>
                            </td>
                            <td> / </td>
                            <td>
                                <div class="editor-field">
                                    @Html.DropDownList("GradeID", ViewBag.GradeID as SelectList, "- Select a Grade -", new { id = "ddlGradeID" })
                                </div>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>

            <tr>
                <td><div class="editor-label">@Html.Label("Spec/Grade Records 1 / 2")</div></td>
                <td>
                    <table>
                        <tr>
                            <td>
                                <div class="editor-field">
                                    @Html.DropDownList("SpecRatingRecordID1", ViewBag.SpecRatingRecordID1 as SelectList, "- Select a Record Identifier -", new { id = "ddlSpecRatingRecordID1", onchange = "onchangeeventSR();" })
                                </div>
                            </td>
                            <td> / </td>
                            <td>
                                <div class="editor-field">
                                    @Html.DropDownList("SpecRatingRecordID2", ViewBag.SpecRatingRecordID2 as SelectList, "- Select a Record Identifier -", new { id = "ddlSpecRatingRecordID2", onchange = "onchangeeventSR();" })
                                </div>
                            </td>
                            <td>
                                <label id="SpecRatingRecordMatrixCheck" class="message-error"></label>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.ANSIRatingID)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.DropDownList("ANSIRatingID", ViewBag.ANSIRatingID as SelectList, "- Select an ANSI Rating -", new { id = "ddlANSIRatingID" })
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.MaterialTypeID)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.DropDownList("MaterialTypeID", ViewBag.MaterialTypeID as SelectList, "- Select a Material Type -", new { id = "ddlMaterialTypeID" })
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    <table>
                        <tr>
                            <td><div class="editor-label">@Html.LabelFor(model => model.AngleID)</div></td>
                            <td>/</td>
                            <td><div class="editor-label">@Html.LabelFor(model => model.RadiusID)</div></td>
                            <td>/</td>
                            <td>
                                <div class="editor-label">@Html.LabelFor(model => model.OrientID)</div>
                            </td>
                        </tr>
                    </table>
                </td>
                <td>
                    <table>
                        <tr>
                            <td>
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.AngleID)
                                    @Html.ValidationMessageFor(model => model.AngleID)
                                </div>
                            </td>
                            <td> / </td>
                            <td>
                                <div class="editor-field">
                                    @Html.DropDownList("RadiusID", ViewBag.RadiusID as SelectList, "- Select a Bend Radius -", new { id = "ddlRadiusID" })
                                </div>
                            </td>
                            <td> / </td>
                            <td>
                                <div class="editor-field">
                                    @Html.DropDownList("OrientID", ViewBag.OrientID as SelectList, "- Select an Orientation -", new { id = "ddlOrientID" })
                                </div>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>

            <tr>
                <td><div class="editor-label">@Html.LabelFor(model => model.CoatingTypeID)</div></td>
                <td>
                    <div class="editor-field">
                        @Html.DropDownList("CoatingTypeID", "- Select a Coating Type -")
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="editor-label">@Html.LabelFor(model => model.Description)</div>
                </td>
                <td>
                    <table>
                        <tr>
                            <td>
                                <div class="wide">
                                    @Html.EditorFor(model => model.Description)
                                </div>
                            </td>
                            <td>
                                <div class="editor-field">
                                    @Html.CheckBoxFor(model => model.DescriptionUnknown) Unknown
                                </div>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="editor-label">@Html.LabelFor(model => model.ManufacturerID)</div>
                </td>
                <td>
                    <div class="editor-field">@Html.DropDownList("ManufacturerID", "- Select a Manufacturer -")</div>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="editor-label">@Html.LabelFor(model => model.ManufacturerTypeID)</div>
                </td>
                <td>
                    <div class="editor-field">@Html.DropDownList("ManufacturerTypeID", "- Select a Manufacturer Type -")</div>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="editor-label">@Html.LabelFor(model => model.Mill)</div>
                </td>
                <td>
                    <table>
                        <tr>
                            <td>
                                <div class="wide">
                                    @Html.EditorFor(model => model.Mill)
                                </div>
                            </td>
                            <td>
                                <div class="editor-field">
                                    @Html.CheckBoxFor(model => model.MillUnknown) Unknown
                                </div>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.MFRDate)
                    </div>
                </td>
                <td>
                    <table>
                        <tr>
                            <td>
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.MFRDate)
                                    @Html.ValidationMessageFor(model => model.MFRDate)
                                </div>
                            </td>
                            <td>
                                <div class="editor-field">
                                    @Html.CheckBoxFor(model => model.MFRDateUnknown) Unknown
                                </div>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.MFRModelNumber)
                </td>
                <td>
                    @Html.EditorFor(model => model.MFRModelNumber)
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.CurrentClassLoc)
                </td>
                <td>
                    @Html.DropDownList("CurrentClassLocID", "- Select Class Location -")
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.SMYS)
                </td>
                <td>
                    @Html.EditorFor(model => model.SMYS)
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.OperatingPressure)
                </td>
                <td>
                    @Html.EditorFor(model => model.OperatingPressure)
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.PTRID)
                </td>
                <td>
                    @Html.DropDownList("PressureTestRecordID", "- Select a Pressure Test Record -")
                </td>
            </tr>

            <tr>
                <td>
                    HCA Status
                </td>
                <td>
                    @Html.DropDownList("HCAStatuses", "- Choose Status of HCA -")
                </td>
            </tr>

        </table>
        
        <p>
            <input type="submit" value="Create" />
        </p>
    
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { ValveSectionID = Session["CurrentValveSection"].ToString(), OrionStationSeries = Session["CurrentOrionStationSeries"].ToString() }, htmlAttributes: new { @class = "linkbutton" })
</div>

@section Scripts {
  @*@Scripts.Render("~/bundles/jqueryval")*@
  @*onchangeevent*@
    <script type="text/javascript">
        function onchangeevent(e) {
            //alert("in");
            var start = parseFloat($("#tbGISAlignStart").val());
            //alert(start);
            var end = parseFloat($("#tbGISAlignEnd").val());
            var length = end - start;
            //alert(length);
            if (!isNaN(length)) {
                $("#lblLength").html(length); //This shows the calculated field
                //alert("set length");
            }
            else {
                $("#lblLength").html("0"); //This shows the calculated field
                //alert("0");
            }
        }
    </script>
  @*onchangeeventlength*@
    <script type="text/javascript">
        function onchangeeventlength(e) {
            //alert("in2");
            var start = parseFloat($("#tbGISAlignStart").val());
            var end = parseFloat($("#tbGISAlignEnd").val());
            var length = parseFloat($("#lblLength").html());
        }
    </script>
  @*onchangeeventOD*@
    <script type="text/javascript">
        function onchangeeventOD(e) {
            var selectedItem1 = $("#ddlODRecordID1").val();
            var selectedItem2 = $("#ddlODRecordID2").val();
            var lbl = $('#ODRecordMatrixCheck');
            var checktype = "OD";
            if (selectedItem1 == null || selectedItem1 == "")
                selectedItem1 = "0";
            if (selectedItem2 == null || selectedItem2 == "")
                selectedItem2 = "0";
            $.ajax({
                cache: false,
                type: "GET",
                url: '/Overview/MatrixCheck',
                data: { "checktype": checktype, "id1": selectedItem1, "id2": selectedItem2 },
                dataType: 'json',
                success: function (data) {
                    var items = "No";
                    $.each(data, function (i, data) {
                        items = "Yes";
                    });
                    var vFeature = document.getElementById('ddlFeatures');
                    var vFeatureText = vFeature.options[vFeature.selectedIndex].innerHTML;
                    if (vFeatureText == "Skip")
                        items = "No";
                    $("#ODRecordMatrixCheck").html(items);
                    document.getElementById("hdnODRecordMatrixCheck").value = (items == "No" ? "0" : "1");
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    lbl.html("No");
                }
            });
        }
    </script>
  @*onchangeeventWT*@
    <script type="text/javascript">
        function onchangeeventWT(e) {
            var selectedItem1 = $("#ddlWTRecordID1").val();
            var selectedItem2 = $("#ddlWTRecordID2").val();
            var lbl = $('#WTRecordMatrixCheck');
            var checktype = "WT";
            if (selectedItem1 == null || selectedItem1 == "")
                selectedItem1 = "0";
            if (selectedItem2 == null || selectedItem2 == "")
                selectedItem2 = "0";
            $.ajax({
                cache: false,
                type: "GET",
                url: '/Overview/MatrixCheck',
                data: { "checktype": checktype, "id1": selectedItem1, "id2": selectedItem2 },
                dataType: 'json',
                success: function (data) {
                    var items = "No";
                    $.each(data, function (i, data) {
                        items = "Yes";
                    });
                    var vFeature = document.getElementById('ddlFeatures');
                    var vFeatureText = vFeature.options[vFeature.selectedIndex].innerHTML;
                    if (vFeatureText == "Skip")
                        items = "No";
                    $("#WTRecordMatrixCheck").html(items);
                    document.getElementById("hdnWTRecordMatrixCheck").value = (items == "No" ? "0" : "1");
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    lbl.html("No");
                }
            });
        }
    </script>
  @*onchangeeventST*@
    <script type="text/javascript">
        function onchangeeventST(e) {
            var selectedItem1 = $("#ddlSeamRecordID1").val();
            var selectedItem2 = $("#ddlSeamRecordID2").val();
            var lbl = $('#SeamRecordMatrixCheck');
            var checktype = "ST";
            if (selectedItem1 == null || selectedItem1 == "")
                selectedItem1 = "0";
            if (selectedItem2 == null || selectedItem2 == "")
                selectedItem2 = "0";
            $.ajax({
                cache: false,
                type: "GET",
                url: '/Overview/MatrixCheck',
                data: { "checktype": checktype, "id1": selectedItem1, "id2": selectedItem2 },
                dataType: 'json',
                success: function (data) {
                    var items = "No";
                    $.each(data, function (i, data) {
                        items = "Yes";
                    });
                    var vFeature = document.getElementById('ddlFeatures');
                    var vFeatureText = vFeature.options[vFeature.selectedIndex].innerHTML;
                    if (vFeatureText == "Skip")
                        items = "No";
                    $("#SeamRecordMatrixCheck").html(items);
                    document.getElementById("hdnSeamRecordMatrixCheck").value = (items == "No" ? "0" : "1");
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    lbl.html("No");
                }
            });
        }
    </script>
  @*onchangeeventSR*@
    <script type="text/javascript">
        function onchangeeventSR(e) {
            var selectedItem1 = $("#ddlSpecRatingRecordID1").val();
            var selectedItem2 = $("#ddlSpecRatingRecordID2").val();
            var lbl = $('#SpecRatingRecordMatrixCheck');
            var checktype = "SR";
            if (selectedItem1 == null || selectedItem1 == "")
                selectedItem1 = "0";
            if (selectedItem2 == null || selectedItem2 == "")
                selectedItem2 = "0";
            $.ajax({
                cache: false,
                type: "GET",
                url: '/Overview/MatrixCheck',
                data: { "checktype": checktype, "id1": selectedItem1, "id2": selectedItem2 },
                dataType: 'json',
                success: function (data) {
                    var items = "No";
                    $.each(data, function (i, data) {
                        items = "Yes";
                    });
                    var vFeature = document.getElementById('ddlFeatures');
                    var vFeatureText = vFeature.options[vFeature.selectedIndex].innerHTML;
                    if (vFeatureText == "Skip")
                        items = "No";
                    $("#SpecRatingRecordMatrixCheck").html(items);
                    document.getElementById("hdnSpecRatingRecordMatrixCheck").value = (items == "No" ? "0" : "1");
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    lbl.html("No");
                }
            });
        }
    </script>
  @*pipetypesfromfeatures*@
    <script type="text/javascript">
        function pipetypesfromfeatures(e) {
            var vFeature = document.getElementById('ddlFeatures');
            var vFeatureText = vFeature.options[vFeature.selectedIndex].innerHTML;
            var selectedItem = $("#ddlFeatures").val();
            var ddlPipeTypes = $("#ddlPipeTypes");
            $.ajax({
                cache: false,
                type: "GET",
                url: '/Overview/LoadPipeTypes/',
                data: { "featureId": selectedItem },
                dataType: 'json',
                success: function (data) {
                    var items = "";
                    items += ("<option value='0'>- Select a Feature Type -</option>");
                    $.each(data, function (i, data) {
                        items += "<option value='" + data.Value + "'>" + data.Text + "</option>";
                    });
                    $("#ddlPipeTypes").html(items);
                    $("#ddlPipeTypes").removeAttr('disabled');
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    //alert('Failed to retrieve pipe types.');
                }
            });

            updateNAdropdowns();        
        }
    </script>
  @*updateNAdropdowns*@
    <script type="text/javascript">
        function updateNAdropdowns() {
            var vFeature = document.getElementById('ddlFeatures');
            var vFeatureText = vFeature.options[vFeature.selectedIndex].innerHTML;
            var vPipeType = document.getElementById('ddlPipeTypes');
            var vPipeTypeText = vPipeType.options[vPipeType.selectedIndex].innerHTML;

            document.getElementById("ddlODID1").options[0].innerHTML = "- Select an OD -";
            document.getElementById("ddlODID2").options[0].innerHTML = "- Select an OD -";
            document.getElementById("ddlSeamWeldTypeID").options[0].innerHTML = "- Select a Seam Weld Type -";
            document.getElementById("ddlSpecRatingID").options[0].innerHTML = "- Select a Spec Rating -";
            document.getElementById("ddlGradeID").options[0].innerHTML = "- Select a Grade -";
            
            if (vFeatureText == "Skip" && vPipeTypeText == "No Records") {
                document.getElementById("ddlODID1").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlODID2").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlSeamWeldTypeID").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlSpecRatingID").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlGradeID").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlODRecordID1").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlODRecordID2").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlWTRecordID1").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlWTRecordID2").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlSeamRecordID1").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlSeamRecordID2").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlSpecRatingRecordID1").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlSpecRatingRecordID2").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlANSIRatingID").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlRadiusID").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlOrientID").options[0].innerHTML = "- N/A -";
            }
            if (vFeatureText == "Skip" && vPipeTypeText != "No Records") {
                document.getElementById("ddlODRecordID1").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlODRecordID2").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlWTRecordID1").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlWTRecordID2").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlSeamRecordID1").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlSeamRecordID2").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlSpecRatingRecordID1").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlSpecRatingRecordID2").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlANSIRatingID").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlRadiusID").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlOrientID").options[0].innerHTML = "- N/A -";
            }
            if (vFeatureText == "Pipe") {
                document.getElementById("ddlODID2").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlODRecordID1").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlODRecordID2").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlWTRecordID1").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlWTRecordID2").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlSeamRecordID1").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlSeamRecordID2").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlSpecRatingRecordID1").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlSpecRatingRecordID2").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlANSIRatingID").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlRadiusID").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlOrientID").options[0].innerHTML = "- N/A -";
            }
            if (vFeatureText == "Non Rated") {
                document.getElementById("ddlODID2").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlODRecordID1").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlODRecordID2").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlWTRecordID1").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlWTRecordID2").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlSeamRecordID1").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlSeamRecordID2").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlSpecRatingRecordID1").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlSpecRatingRecordID2").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlANSIRatingID").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlRadiusID").options[0].innerHTML = "- N/A -";
                document.getElementById("ddlOrientID").options[0].innerHTML = "- N/A -";
            }
            onchangeeventOD(null);
            onchangeeventWT(null);
            onchangeeventST(null);
            onchangeeventSR(null);
        }
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            onchangeevent(); //Calculate on page load
            var vMaterialType = document.getElementById('ddlMaterialTypeID');
            for (var i = 0; i < vMaterialType.options.length; i++) {
                if (vMaterialType.options[i].text == 'Steel') {
                    vMaterialType.options[i].selected = true;
                }
            }
        });
    </script>
}
