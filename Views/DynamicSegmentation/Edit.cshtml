@model PipelineFeatureList.Models.DynamicSegmentation

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>DynamicSegmentation</legend>

        @Html.HiddenFor(model => model.DynamicSegmentationID)

        <div class="editor-label">
            @Html.LabelFor(model => model.Engineer_UserID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Engineer_UserID)
            @Html.ValidationMessageFor(model => model.Engineer_UserID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.QueuedOn)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.QueuedOn)
            @Html.ValidationMessageFor(model => model.QueuedOn)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StartedOn)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StartedOn)
            @Html.ValidationMessageFor(model => model.StartedOn)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CompletedOn)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CompletedOn)
            @Html.ValidationMessageFor(model => model.CompletedOn)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PipelineSystemID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PipelineSystemID)
            @Html.ValidationMessageFor(model => model.PipelineSystemID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PipelineID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PipelineID)
            @Html.ValidationMessageFor(model => model.PipelineID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ValveSectionID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ValveSectionID)
            @Html.ValidationMessageFor(model => model.ValveSectionID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsLatestCopy)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsLatestCopy)
            @Html.ValidationMessageFor(model => model.IsLatestCopy)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProcessingMessage)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ProcessingMessage)
            @Html.ValidationMessageFor(model => model.ProcessingMessage)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
